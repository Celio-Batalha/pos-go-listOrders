services:
  app:
    build: .
    container_name: app
    restart: always
    ports:
      - 8000:8000   # REST API
      - 8080:8080   # GraphQL
      - 50051:50051 # gRPC
    environment:
      DB_DRIVER: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      WEB_SERVER_PORT: :8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: :8080
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
      - ./sql/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      timeout: 20s
      retries: 10
      interval: 10s
    networks:
      - app-network

  migrate:
    image: migrate/migrate
    container_name: migrate
    volumes:
      - ./sql/migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "mysql://root:root@tcp(mysql:3306)/orders",
      "up"
    ]
    depends_on:
      mysql:
        condition: service_healthy
    restart: "no"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge  